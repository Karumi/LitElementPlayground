/**
@license
Copyright (c) 2018 The Polymer Project Authors. All rights reserved.
This code may only be used under the BSD style license found at http://polymer.github.io/LICENSE.txt
The complete set of authors may be found at http://polymer.github.io/AUTHORS.txt
The complete set of contributors may be found at http://polymer.github.io/CONTRIBUTORS.txt
Code distributed by Google as part of the polymer project is also
subject to an additional IP rights grant found at http://polymer.github.io/PATENTS.txt
*/
declare global {
    interface Window {
        process?: Object;
        __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;
    }
}
import { compose } from 'redux';
import { LazyState } from './reducers/lazy.js';
export interface AppStateCounter {
    counter: CounterState;
}
export interface AppStateLazy {
    lazy: LazyState;
}
export interface AppState extends AppStateCounter, Partial<AppStateLazy> {
}
import { CounterState } from './reducers/counter.js';
export declare const store: import("redux").Store<{}, import("redux").Action<any>> & import("../lazy-reducer-enhancer.js").LazyStore;
